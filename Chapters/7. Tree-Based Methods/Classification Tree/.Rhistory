knitr::opts_chunk$set(echo = TRUE)
# Clean the environment
rm(list = ls())
df <- read.csv('Telco-Customer-Churn.csv', stringsAsFactors = TRUE)
str(df)
summary(df)
knitr::opts_chunk$set(echo = TRUE)
# Clean the environment
rm(list = ls())
df <- read.csv('Telco-Customer-Churn.csv', stringsAsFactors = TRUE)
str(df)
summary(df)
df$CustomerID <- NULL
df <- na.omit(df)
set.seed(123)
train <- sample(1:nrow(df), nrow(df)*0.5)
train_df <- df[train,]
test_df <- df[-train,]
# Num of observations in training set
nrow(train_df)
# Num of observations in test set
nrow(test_df)
library(tree)
# Fit a decision tree
tree_churn <- tree(Churn ~., data = train_df)
# Summary of the decision tree
summary(tree_churn)
# Plot the decison tree
plot(tree_churn)
text(tree_churn, cex = 0.75, col = 'red')
# Plot the decison tree
plot(tree_churn)
text(tree_churn, cex = 0.75,
col = 'red', pretty = FALSE)
yhat <- predict(tree_churn, newdata = test_df, type = 'class')
yobs <- test_df$Churn
library(caret)
confusionMatrix(yhat, yobs, positive = 'Yes')
cv_churn <- cv.tree(tree_churn, FUN=prune.misclass)
cv_churn
plot(cv_churn$size, cv_churn$dev, type='b',
xlab = 'Tree Size', ylab = 'Deviance')
tree_churn_pruned <- prune.misclass(tree_churn, best = 4)
# Plot the pruned tree
plot(tree_churn_pruned)
text(tree_churn_pruned, cex = 0.75,
col = 'red', pretty = FALSE)
yhat2 <- predict(tree_churn_pruned, newdata = test_df, type = 'class')
library(caret)
confusionMatrix(yhat2, yobs, positive = 'Yes')
df$CustomerID <- NULL
