df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df <- select(df, -c(Id, ZIP_Code))
glimpse(df)
df <- select(df, -c(Id, ZIP_Code))
df <- select(df, -c(Id, ZIP_Code))
---
title: "Homework 6"
author: "Mark Chafin"
date: "3/16/2021"
output: html_document
---
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
glimpse(df)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
glimpse(df)
fitControl <- trainControl(method = "cv", number = 5)
set.seed(100)
logit_fit <- train(factor(Personal_Loan) ~ ., data = df,trControl = fitControl, family = binomial(link = "logit"))
print(logit_fit)
confusionMatrix(logit_fit)
k.folds <- function(k) {
folds <- createFolds(df$Personal_Loan, k = k, list = TRUE, returnTrain = TRUE)
accuracies <- c()
for (i in 1:k) {
model <- glm(Personal_Loan ~ ., data = df[folds[[i]],], family = binomial(link = 'logit'))
pred_prob_cv <- predict(object = model, newdata = df[-folds[[i]],], type = "response")
pred_class_cv <- ifelse(pred_prob_cv > 0.5, 1, 0)
accuracies <- c(accuracies,
confusionMatrix(factor(pred_class_cv),
df[-folds[[i]], ]$Personal_Loan, positive = "1")$byClass['Balanced Accuracy'])
}
accuracies
}
set.seed(100)
accuracies_cv <- k.folds(5)
accuracies_cv
# Calculate the average balanced accuracy
cat('Balanced Accuracy:\n Mean = ', mean(accuracies_cv),"; ",
'Standard Deviation = ',sd(accuracies_cv), ";\n",
'95% Confidence Interval = [',
mean(accuracies_cv) - sd(accuracies_cv) * 1.96, ", ",
mean(accuracies_cv) + sd(accuracies_cv) * 1.96,"]")
## Train a logistic regression model with repeated 5-fold cross-validation
fitControl_rcv <- trainControl(method = "repeatedcv",
number = 5,
repeats = 200,
classProbs = TRUE,
summaryFunction = twoClassSummary)
set.seed(100)
logit_fit_rcv <- train(factor(ifelse(Personal_Loan==1, 'Yes', 'No'), levels = c('Yes','No')) ~ .,
data = df,
trControl = fitControl_rcv,
method="glm", family=binomial(link='logit'),
metric = "ROC")
print(logit_fit_rcv)
confusionMatrix(logit_fit_rcv)
set.seed(100)
LDA_fit_rcv <- train(factor(ifelse(Personal_Loan==1, 'Yes', 'No'), levels = c('Yes','No')) ~ .,
data = df,
trControl = fitControl_rcv,
method="lda", family=binomial(link='logit'),
metric = "ROC")
print(LDA_fit_rcv)
confusionMatrix(LDA_fit_rcv)
confusionMatrix(factor(predict(LDA_fit_rcv, newdata = df), levels = c("No", "Yes"),
labels = c("0", "1")),
df$Personal_Loan, positive = '1')
set.seed(100)
QDA_fit <- train(factor(ifelse(Personal_Loan==1, 'Yes', 'No'), levels = c('Yes','No')) ~ .,
data = df,
trControl = fitControl_rcv,
method="qda", family=binomial(link='logit'),
metric = "ROC")
print(QDA_fit)
confusionMatrix(QDA_fit)
confusionMatrix(factor(predict(QDA_fit, newdata = df), levels = c("No", "Yes"),
labels = c("0", "1")),
df$Personal_Loan, positive = '1')
# Set the number of bootstraps
n_bootstraps <- 1000
# Initiate vectors of performance metric
bootstrap_acc_logit <- NULL
bootstrap_acc_lda <- NULL
# Set the random number seed
set.seed(100)
for (i in 1:n_bootstraps){
# Get a bootstrap of test dataset
resample_test <- df[sample(nrow(df), replace = TRUE),]
# Calculate predicted outcome
logit_resample_prob <- predict(logit_fit, newdata = resample_test, type="prob")
logit_resample_pred <- ifelse(logit_resample_prob > 0.5, 1, 0)
lda_resample_pred <- predict(LDA_fit_rcv, newdata = resample_test)
# Calculate accuracy of the logit model using the bootstrap
bootstrap_acc_logit <- c(bootstrap_acc_logit, mean(logit_resample_pred == resample_test$Personal_Loan))
# Calculate f1 score of the logit model using the bootstrap
bootstrap_acc_lda <- c(bootstrap_acc_lda, mean(lda_resample_pred$class == resample_test$Personal_Loan))
}
# Set the number of bootstraps
n_bootstraps <- 1000
# Initiate vectors of performance metric
bootstrap_acc_logit <- NULL
bootstrap_acc_lda <- NULL
# Set the random number seed
set.seed(100)
for (i in 1:n_bootstraps){
# Get a bootstrap of test dataset
resample_test <- df[sample(nrow(df), replace = TRUE),]
# Calculate predicted outcome
logit_resample_prob <- predict(logit_fit, newdata = resample_test, type="prob")
logit_resample_pred <- ifelse(logit_resample_prob > 0.5, 1, 0)
lda_resample_pred <- predict(LDA_fit_rcv, newdata = resample_test)
# Calculate accuracy of the logit model using the bootstrap
bootstrap_acc_logit <- c(bootstrap_acc_logit, mean(logit_resample_pred == resample_test$Personal_Loan))
# Calculate f1 score of the logit model using the bootstrap
bootstrap_acc_lda <- c(bootstrap_acc_lda, mean(lda_resample_pred == resample_test$Personal_Loan))
}
lda_resample_pred
resample_test$Personal_Loan
factor(resample_test$Personal_Loan, levels = 0,1, labels = "No", "Yes")
factor(ifelse(resample_test$Personal_Loan==1, 'Yes', 'No'), levels = c('Yes','No')
factor(ifelse(resample_test$Personal_Loan==1, 'Yes', 'No'), levels = c('Yes','No'))
# Set the number of bootstraps
n_bootstraps <- 1000
# Initiate vectors of performance metric
bootstrap_acc_logit <- NULL
bootstrap_acc_lda <- NULL
# Set the random number seed
set.seed(100)
for (i in 1:n_bootstraps){
# Get a bootstrap of test dataset
resample_test <- df[sample(nrow(df), replace = TRUE),]
# Calculate predicted outcome
logit_resample_prob <- predict(logit_fit, newdata = resample_test, type="prob")
logit_resample_pred <- ifelse(logit_resample_prob > 0.5, 1, 0)
lda_resample_pred <- predict(LDA_fit_rcv, newdata = resample_test)
# Calculate accuracy of the logit model using the bootstrap
bootstrap_acc_logit <- c(bootstrap_acc_logit, mean(logit_resample_pred == resample_test$Personal_Loan))
# Calculate f1 score of the logit model using the bootstrap
bootstrap_acc_lda <- c(bootstrap_acc_lda, mean(lda_resample_pred == factor(ifelse(resample_test$Personal_Loan==1, 'Yes', 'No'), levels = c('Yes','No'))))
}
# Set the number of bootstraps
n_bootstraps <- 1000
# Initiate vectors of performance metric
bootstrap_acc_logit <- NULL
bootstrap_acc_lda <- NULL
# Set the random number seed
set.seed(100)
for (i in 1:n_bootstraps){
# Get a bootstrap of test dataset
resample_test <- df[sample(nrow(df), replace = TRUE),]
# Calculate predicted outcome
logit_resample_prob <- predict(logit_fit, newdata = resample_test, type="prob")
logit_resample_pred <- ifelse(logit_resample_prob > 0.5, 1, 0)
lda_resample_pred <- predict(LDA_fit_rcv, newdata = resample_test)
# Calculate accuracy of the logit model using the bootstrap
bootstrap_acc_logit <- c(bootstrap_acc_logit, mean(logit_resample_pred == resample_test$Personal_Loan))
# Calculate f1 score of the logit model using the bootstrap
bootstrap_acc_lda <- c(bootstrap_acc_lda, mean(lda_resample_pred == factor(ifelse(resample_test$Personal_Loan==1, 'Yes', 'No'), levels = c('Yes','No'))))
}
summary(bootstrap_acc_logit)
summary(bootstrap_acc_lda)
knitr::opts_chunk$set(echo = TRUE)
# Clean the environment
rm(list = ls())
# Read in data
bank <- read.csv("UniversalBank.csv")
# Structure of the dataset
str(bank)
head(bank)
bank$Id <- NULL
bank$ZIP_Code <- NULL
bank$Education <- factor(bank$Education)
summary(bank)
index <- 1:nrow(bank)
set.seed(123)
train_index <- sample(index, round(length(index)*0.7))
train_set <- bank[train_index,]
test_set <- bank[-train_index,]
# Logistic regression
logit.fit <- glm(Personal_Loan ~ .,
family=binomial(link='logit'), data = train_set)
summary(logit.fit)
logit_test_prob <- predict(logit.fit, newdata = test_set, type="response")
logit_test_pred <- ifelse(logit_test_prob > 0.5, 1, 0)
library(caret)
confusionMatrix(factor(logit_test_pred),factor(test_set$Personal_Loan), positive = "1")
library(MASS)
lda.fit=lda(Personal_Loan ~ ., data = train_set)
lda.fit
lda.pred <- predict(lda.fit, newdata = test_set)
confusionMatrix(factor(lda.pred$class),factor(test_set$Personal_Loan), positive = "1")
# Set the number of bootstraps
n_bootstraps <- 1000
# Initiate vectors of performance metric
bootstrap_acc_logit <- NULL
bootstrap_acc_lda <- NULL
# Set the random number seed
set.seed(100)
for (i in 1:n_bootstraps){
# Get a bootstrap of test dataset
resample_test <- test_set[sample(nrow(test_set), replace = TRUE),]
# Calculate predicted outcome
logit_resample_prob <- predict(logit.fit, newdata = resample_test, type="response")
logit_resample_pred <- ifelse(logit_resample_prob > 0.5, 1, 0)
lda_resample_pred <- predict(lda.fit, newdata = resample_test)
# Calculate accuracy of the logit model using the bootstrap
bootstrap_acc_logit <- c(bootstrap_acc_logit, mean(logit_resample_pred == resample_test$Personal_Loan))
# Calculate f1 score of the logit model using the bootstrap
bootstrap_acc_lda <- c(bootstrap_acc_lda, mean(lda_resample_pred$class == resample_test$Personal_Loan))
}
summary(bootstrap_acc_logit)
summary(bootstrap_acc_lda)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
df <- read.csv("UniversalBank.csv", stringsAsFactors = TRUE)
str(df)
df$Education <- factor(df$Education, levels = c(1, 2, 3),
labels = c("Undergrad", "Graduate", "Advanced/Professional"))
df$Personal_Loan <- factor(df$Personal_Loan)
df <- select(df, -c(Id, ZIP_Code))
