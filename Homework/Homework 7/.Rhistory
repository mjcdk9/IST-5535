library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, cor.test(x, y)$p.value)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, x cor.test(x, y)$p.value)
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, x, cor.test(x, y)$p.value)
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x), cor.test(x, y)$p.value)
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x), cor.test(x, y)$p.value)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x), cor.test(x, y)$p.value)
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(HW7Data, progress = FALSE)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("df.csv")
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
reg <- regsubsets(predictor.matrix, y, nvmax = 6)
pred.matrix <- as.matrix(x)
reg <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(reg)
stats.df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats.long <- stats.df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats.long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats.df$bic)
stats$outmat[n,]
plot(reg)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
back <- backsubsets(pred.matrix, y, nvmax = 6)
pred.matrix <- as.matrix(x)
back <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(back)
stats.df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats.long <- stats.df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats.long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats.df$bic)
stats$outmat[n,]
plot(back)
pred.matrix <- as.matrix(x)
back <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(back)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats.long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(back)
pred.matrix <- as.matrix(x)
forward <- regsubsets(predictor.matrix, y, nvmax = 6, method = "forward")
predictor.matrix <- as.matrix(x)
predictor.matrix <- as.matrix(x)
predictor.matrix <- as.matrix(x)
fss <- regsubsets(predictor.matrix, y, nvmax = 6, method = "forward")
pred.matrix <- as.matrix(x)
forward <- regsubsets(predictor.matrix, y, nvmax = 6, method = "forward")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
back <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(back)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats.long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
pred.matrix <- as.matrix(x)
back <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(back)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats_long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(back)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
best <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(best)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats_long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(best)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
best <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(best)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats_long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(best)
pred.matrix <- as.matrix(x)
forward <- regsubsets(predictor.matrix, y, nvmax = 6, method = "forward")
pred.matrix <- as.matrix(x)
backward <- regsubsets(pred.matrix, y, method = "backward")
stats <- summary(backward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(backward)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
best <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(best)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats_long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(best)
pred.matrix <- as.matrix(x)
forward <- regsubsets(pred.matrix, y, nvmax = 6, method = "forward")
stats <- summary(forward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(forward)
pred.matrix <- as.matrix(x)
backward <- regsubsets(pred.matrix, y, method = "backward")
stats <- summary(backward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(backward)
set.seed(123)
lambdas <- 10^seq(-1, -4, by = -.01)
pmscaled <- scale(predictor.matrix, center = TRUE, scale = TRUE)
set.seed(123)
lambdas <- 10^seq(-1, -4, by = -.01)
pmscaled <- scale(pred.matrix, center = TRUE, scale = TRUE)
lasso_reg <- cv.glmnet(pmscaled, y, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 10)
lasso_df <- tibble(lambda = lasso_reg$lambda, cv_error = lasso_reg$cvm)
ggplot(lasso_df, aes(lambda, cv_error)) + geom_line() + geom_point()
# Best lambda
lambda_best <- lasso_reg$lambda.min
lasso_model <- glmnet(pmscaled, y, alpha = 1, lambda = lambda_best,
standardize = TRUE)
coef(lasso_model)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
best <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(best)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats_long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(best)
pred.matrix <- as.matrix(x)
forward <- regsubsets(pred.matrix, y, nvmax = 6, method = "forward")
stats <- summary(forward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(forward)
pred.matrix <- as.matrix(x)
backward <- regsubsets(pred.matrix, y, method = "backward")
stats <- summary(backward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(backward)
set.seed(123)
lambdas <- 10^seq(-1, -4, by = -.01)
pmscaled <- scale(pred.matrix, center = TRUE, scale = TRUE)
lasso_reg <- cv.glmnet(pmscaled, y, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 10)
lasso_df <- tibble(lambda = lasso_reg$lambda, cv_error = lasso_reg$cvm)
ggplot(lasso_df, aes(lambda, cv_error)) + geom_line() + geom_point()
# Best lambda
lambda_best <- lasso_reg$lambda.min
lasso_model <- glmnet(pmscaled, y, alpha = 1, lambda = lambda_best,
standardize = TRUE)
coef(lasso_model)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
best <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(best)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats_long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(best)
pred.matrix <- as.matrix(x)
forward <- regsubsets(pred.matrix, y, nvmax = 6, method = "forward")
stats <- summary(forward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(forward)
pred.matrix <- as.matrix(x)
backward <- regsubsets(pred.matrix, y, method = "backward")
stats <- summary(backward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(backward)
set.seed(123)
lambdas <- 10^seq(-1, -4, by = -.01)
pmscaled <- scale(pred.matrix, center = TRUE, scale = TRUE)
lasso_reg <- cv.glmnet(pmscaled, y, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 10)
lasso_df <- tibble(lambda = lasso_reg$lambda, cv_error = lasso_reg$cvm)
ggplot(lasso_df, aes(lambda, cv_error)) + geom_line() + geom_point()
# Best lambda
lambda_best <- lasso_reg$lambda.min
lasso_model <- glmnet(pmscaled, y, alpha = 1, lambda = lambda_best,
standardize = TRUE)
coef(lasso_model)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
best <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(best)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats_long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(best)
pred.matrix <- as.matrix(x)
forward <- regsubsets(pred.matrix, y, nvmax = 6, method = "forward")
stats <- summary(forward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(forward)
pred.matrix <- as.matrix(x)
backward <- regsubsets(pred.matrix, y, method = "backward")
stats <- summary(backward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(backward)
set.seed(123)
lambdas <- 10^seq(-1, -4, by = -.01)
pmscaled <- scale(pred.matrix, center = TRUE, scale = TRUE)
lasso_reg <- cv.glmnet(pmscaled, y, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 10)
lasso_df <- tibble(lambda = lasso_reg$lambda, cv_error = lasso_reg$cvm)
ggplot(lasso_df, aes(lambda, cv_error)) + geom_line() + geom_point()
# Best lambda
lambda_best <- lasso_reg$lambda.min
lasso_model <- glmnet(pmscaled, y, alpha = 1, lambda = lambda_best,
standardize = TRUE)
coef(lasso_model)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(caret)
library(mlbench)
library(tidyverse)
library(leaps)
library(glmnet)
library(GGally)
library(ggplot2)
df <- read.csv("HW7Data.csv")
y <- df$y
x <- df[-7]
p.values <- map_dbl(x, function(x) cor.test(x, y)$p.value)
tibble(Variable = paste0("x", 1:6), `p-value` = p.values)
ggpairs(df, progress = FALSE)
pred.matrix <- as.matrix(x)
best <- regsubsets(pred.matrix, y, nvmax = 6)
stats <- summary(best)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model.Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model.Size)
ggplot(stats_long, aes(Model.Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(best)
pred.matrix <- as.matrix(x)
forward <- regsubsets(pred.matrix, y, nvmax = 6, method = "forward")
stats <- summary(forward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(forward)
pred.matrix <- as.matrix(x)
backward <- regsubsets(pred.matrix, y, method = "backward")
stats <- summary(backward)
stats_df <- as_tibble(stats[2:6]) %>% mutate(Model_Size = 1:6)
stats_long <- stats_df %>% gather("Metric", "Value", -Model_Size)
ggplot(stats_long, aes(Model_Size, Value)) + geom_line() + geom_point() +
facet_wrap(vars(Metric), ncol = 2, scales = "free_y")
n <- which.min(stats_df$bic)
stats$outmat[n,]
plot(backward)
set.seed(123)
lambdas <- 10^seq(-1, -4, by = -.01)
ScaledPredMatrix <- scale(pred.matrix, center = TRUE, scale = TRUE)
lasso <- cv.glmnet(ScaledPredMatrix, y, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 10)
lasso_df <- tibble(lambda = lasso$lambda, cv_error = lasso$cvm)
ggplot(lasso_df, aes(lambda, cv_error)) + geom_line() + geom_point()
# Best lambda
lambda_best <- lasso$lambda.min
lasso_model <- glmnet(ScaledPredMatrix, y, alpha = 1, lambda = lambda_best,
standardize = TRUE)
coef(lasso_model)
